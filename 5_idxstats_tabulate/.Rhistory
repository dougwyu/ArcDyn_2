# For PlatesEF & GH, the amts are 0.2, 0.4, 0.8
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
mitogenome == "Lepidoptera_Bombycidae_Bombyx_mori_COI" ~ 0.2,
mitogenome == "Coleoptera_Mordellidae_COI" ~ 0.4,
mitogenome == "Coleoptera_Elateridae_COI" ~ 0.8,
TRUE ~ input_amount
)
)
### add input_DNA amounts for mockgradient input species
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockgradient" & mitogenome == "PlateJ_C1_ACE4226_Diptera_Syrphidae_Helophilus_lapponicus_idba_spades_consensus" ~ 2699,
experiment == "mockgradient" & mitogenome == "PlateI_H5_AAC1834_Diptera_Syrphidae_Parasyrphus_tarsatus_refsoup_Concatenated" ~ 1597,
experiment == "mockgradient" & mitogenome == "PlateI_G3_AAC6088_Diptera_Syrphidae_Syrphus_torvus_idba_spades_consensus" ~ 1228,
experiment == "mockgradient" & mitogenome == "PlateI_G11_AAB1982_Diptera_Syrphidae_Helophilus_groenlandicus_spades_pilon" ~ 945,
experiment == "mockgradient" & mitogenome == "197_AAG1686_Diptera_Muscidae_Spilogona_micans_IDBA_pilon" ~ 727,
experiment == "mockgradient" & mitogenome == "MITO_18_AAZ5252_Diptera_Tachinidae_Peleteria_aenea_SPADESmeta_pilon" ~ 559,
experiment == "mockgradient" & mitogenome == "MITO_26_ACA4207_Diptera_Muscidae_Spilogona_monacantha_IDBApilon" ~ 430,
experiment == "mockgradient" & mitogenome == "MITO_11_ABZ1244_Diptera_Anthomyiidae_Zaphne_occidentalis_IDBApilon" ~ 331,
experiment == "mockgradient" & mitogenome == "MITO_7_AAM9104_Diptera_Muscidae_Spilogona_almqvistii_IDBApilon" ~ 255,
experiment == "mockgradient" & mitogenome == "PlateI_G4_AAM7340_Diptera_Scathophagidae_Gonarcticus_arcticus_spades_pilon" ~ 196,
experiment == "mockgradient" & mitogenome == "MITO_8_AAD7664_Diptera_Muscidae_Drymeia_segnis_IDBApilon" ~ 151,
experiment == "mockgradient" & mitogenome == "MITO_24_AAC6873_Diptera_Muscidae_Limnophora_groenlandica_IDBApilon" ~ 116,
experiment == "mockgradient" & mitogenome == "464_AAZ4195_Diptera_Syrphidae_Platycheirus_groenlandicus_IDBA_pilon" ~ 89,
experiment == "mockgradient" & mitogenome == "MITO_22_ACM5032_Diptera_Muscidae_Lophosceles_minimus_IDBApilon" ~ 69,
experiment == "mockgradient" & mitogenome == "PlateI_G10_AAG2440_Diptera_Anthomyiidae_Eutrichota_tunicata_blastSpades_pilon" ~ 53,
experiment == "mockgradient" & mitogenome == "PlateI_D9_AAV1117_Diptera_Scathophagidae_Scathophaga_apicalis_spades_pilon" ~ 41,
experiment == "mockgradient" & mitogenome == "34_ACE7762_Diptera_Muscidae_Spilogona_denudata_IDBA_pilon_COIDET_AAP9046_Diptera_Muscidae_Spilogona_megastoma" ~ 31,
experiment == "mockgradient" & mitogenome == "PlateI_H1_ACR5253_Diptera_Scathophagidae_Scathophaga_nigripalpis_spades_pilon" ~ 24,
experiment == "mockgradient" & mitogenome == "soup_AAM9110_Diptera_Muscidae_Spilogona_novaesibiriae_geneiousmapping" ~ 20,
TRUE ~ input_amount
)
)
### set all other mockgradient species to NA
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockgradient" & is.na(input_amount) ~ 0,
TRUE ~ input_amount
)
)
# for mockeven experiment, set input_amount for non-COI_spike species and non-inputDNA species to 0
mocks_idx_meta_genomecov_GH <- mocks_idx_meta_genomecov_GH %>%
mutate(input_amount = case_when(
experiment == "mockeven" &  # mockeven experiment
str_detect(mitogenome, "_COI$") == FALSE &   # non-COI_spike species
!(mitogenome %in% c("PlateI_G11_AAB1982_Diptera_Syrphidae_Helophilus_groenlandicus_spades_pilon", "197_AAG1686_Diptera_Muscidae_Spilogona_micans_IDBA_pilon", "MITO_18_AAZ5252_Diptera_Tachinidae_Peleteria_aenea_SPADESmeta_pilon", "MITO_26_ACA4207_Diptera_Muscidae_Spilogona_monacantha_IDBApilon", "MITO_11_ABZ1244_Diptera_Anthomyiidae_Zaphne_occidentalis_IDBApilon", "PlateJ_C1_ACE4226_Diptera_Syrphidae_Helophilus_lapponicus_idba_spades_consensus", "PlateI_H5_AAC1834_Diptera_Syrphidae_Parasyrphus_tarsatus_refsoup_Concatenated", "MITO_8_AAD7664_Diptera_Muscidae_Drymeia_segnis_IDBApilon", "PlateI_G3_AAC6088_Diptera_Syrphidae_Syrphus_torvus_idba_spades_consensus", "MITO_7_AAM9104_Diptera_Muscidae_Spilogona_almqvistii_IDBApilon", "PlateI_G4_AAM7340_Diptera_Scathophagidae_Gonarcticus_arcticus_spades_pilon", "MITO_24_AAC6873_Diptera_Muscidae_Limnophora_groenlandica_IDBApilon", "464_AAZ4195_Diptera_Syrphidae_Platycheirus_groenlandicus_IDBA_pilon", "MITO_22_ACM5032_Diptera_Muscidae_Lophosceles_minimus_IDBApilon", "PlateI_G10_AAG2440_Diptera_Anthomyiidae_Eutrichota_tunicata_blastSpades_pilon", "PlateI_D9_AAV1117_Diptera_Scathophagidae_Scathophaga_apicalis_spades_pilon", "34_ACE7762_Diptera_Muscidae_Spilogona_denudata_IDBA_pilon_COIDET_AAP9046_Diptera_Muscidae_Spilogona_megastoma", "PlateI_H1_ACR5253_Diptera_Scathophagidae_Scathophaga_nigripalpis_spades_pilon", "soup_AAM9110_Diptera_Muscidae_Spilogona_novaesibiriae_geneiousmapping", "608_AAA9651_Araneae_Lycosidae_Pardosa_glacialis_IDBA_pilon")) ~ 0, # species not added to the mocks
TRUE ~ input_amount
)
)
View(mocks_idx_meta_genomecov_GH)
names_EF <- names(mocks_idx_meta_genomecov_EF)
names_GH <- names(mocks_idx_meta_genomecov_GH)
identical(names_EF, names_GH) # TRUE
# bind rows together
mocks_idx_meta_genomecov_EFGH <- bind_rows(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH)
# confirm 409 (mitogenomes + spikes)
mocks_idx_meta_genomecov_EFGH %>%
distinct(mitogenome) %>%
count()
mocks_idx_meta_genomecov_EFGH_mitogenomes <- mocks_idx_meta_genomecov_EFGH
# view names
names(mocks_idx_meta_genomecov_EFGH_mitogenomes)
rm(mocks_idx_meta_genomecov_EF, mocks_idx_meta_genomecov_GH, mocks_idx_meta_genomecov_EFGH)
View(idx_meta_genomecov_ABA2B2EFGH_barcodes)
View(idx_meta_genomecov_ABA2B2EFGH_barcodes)
barcodesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_406barcodes_20190116"
mitogenomesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_308mitogenomes_20190115"
write_tsv(mocks_idx_meta_genomecov_EFGH_barcodes, file.path(barcodesoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_EFGH_minimap2_20190116_406barcodes.txt")) # output file for merging with the other RUN outputs
write_tsv(mocks_idx_meta_genomecov_EFGH_mitogenomes, file.path(mitogenomesoutputidxstatstabulatefolder, "mocks_idx_meta_genomecov_EFGH_minimap2_20190115_308mitogenomes.txt")) # output file for merging with the other RUN outputs
# create variable from Date, Trap(ABC), and EI_RUN:  e.g. Date_1997_08_04_TrapA_AB
# stringr::str_pad(x, width = 2, side = "left", pad = "0")  # to ensure that the date always has two digits, e.g. 07.
# stringr::str_replace(idx_meta_genomecov_ABA2B2EFGH$EI_RUN, "idx_meta_genomecov_", "") # to extract AB, A2B2, EF, GH from EI_RUN
idx_meta_genomecov_ABA2B2EFGH_mitogenomes$DateTrapEIRUN <- str_c("Date", year(idx_meta_genomecov_ABA2B2EFGH$Date), str_pad(month(idx_meta_genomecov_ABA2B2EFGH$Date), 2, side = "left", pad = "0"), str_pad(day(idx_meta_genomecov_ABA2B2EFGH$Date), 2, side = "left", pad = "0"), idx_meta_genomecov_ABA2B2EFGH$Trap, str_replace(idx_meta_genomecov_ABA2B2EFGH$EI_RUN, "idx_meta_genomecov_", ""), sep = "_")
# create variable from Date, Trap(ABC), and EI_RUN:  e.g. Date_1997_08_04_TrapA_AB
# stringr::str_pad(x, width = 2, side = "left", pad = "0")  # to ensure that the date always has two digits, e.g. 07.
# stringr::str_replace(idx_meta_genomecov_ABA2B2EFGH$EI_RUN, "idx_meta_genomecov_", "") # to extract AB, A2B2, EF, GH from EI_RUN
idx_meta_genomecov_ABA2B2EFGH_mitogenomes$DateTrapEIRUN <- str_c("Date", year(idx_meta_genomecov_ABA2B2EFGH_mitogenomes$Date), str_pad(month(idx_meta_genomecov_ABA2B2EFGH_mitogenomes$Date), 2, side = "left", pad = "0"), str_pad(day(idx_meta_genomecov_ABA2B2EFGH_mitogenomes$Date), 2, side = "left", pad = "0"), idx_meta_genomecov_ABA2B2EFGH_mitogenomes$Trap, str_replace(idx_meta_genomecov_ABA2B2EFGH_mitogenomes$EI_RUN, "idx_meta_genomecov_", ""), sep = "_")
View(idx_meta_genomecov_ABA2B2EFGH_mitogenomes)
# Make wide table for visualisation (left to right should follow temporal order (DateTrapEIRUN))
idx_meta_genomecov_ABA2B2EFGH_wide <- idx_meta_genomecov_ABA2B2EFGH_mitogenomes %>%
dplyr::select(DateTrapEIRUN, mitogenome, mapped_reads_COI_lysis_corr) %>%
dplyr::arrange(DateTrapEIRUN) %>%
tidyr::spread(DateTrapEIRUN, mapped_reads_COI_lysis_corr) %>%
dplyr::arrange(mitogenome)
# Make wide table for visualisation (left to right should follow temporal order (DateTrapEIRUN))
idx_meta_genomecov_ABA2B2EFGH_wide <- idx_meta_genomecov_ABA2B2EFGH_mitogenomes %>%
dplyr::select(DateTrapEIRUN, mitogenome, mapped_reads) %>%
dplyr::arrange(DateTrapEIRUN) %>%
tidyr::spread(DateTrapEIRUN, mapped_reads_COI_lysis_corr) %>%
dplyr::arrange(mitogenome)
# Make wide table for visualisation (left to right should follow temporal order (DateTrapEIRUN))
idx_meta_genomecov_ABA2B2EFGH_wide <- idx_meta_genomecov_ABA2B2EFGH_mitogenomes %>%
dplyr::select(DateTrapEIRUN, mitogenome, mapped_reads) %>%
dplyr::arrange(DateTrapEIRUN) %>%
tidyr::spread(DateTrapEIRUN, mapped_reads) %>%
dplyr::arrange(mitogenome)
pctcovermin <- 0.10
idx_meta_genomecov_ABA2B2EFGH_wide_pctcovermin <- idx_meta_genomecov_ABA2B2EFGH_mitogenomes %>%
dplyr::filter(pct_coverage >= pctcovermin) %>%
dplyr::select(DateTrapEIRUN, mitogenome, mapped_reads) %>%
dplyr::arrange(DateTrapEIRUN) %>%
tidyr::spread(DateTrapEIRUN, mapped_reads) %>%
dplyr::arrange(mitogenome)
setwd("~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/5_idxstats_tabulate")
library(tidyverse)
library(readxl) # read excel spreadsheets
library(hablar) # data type conversion
library(arsenal) # utilities
# PlatesAB
# sample identifier in soupdata has form IPO3916_A1, where IPO3916 is PlateA, IPO3917 is PlateB
fastq_read_counts_PlatesAB <- read_table(file.path( "../../../../2016/bulk_samples/PlatesAB_EI_20160512/fastq_read_counts_PlatesAB.txt"))
# PlatesAB
# sample identifier in soupdata has form IPO3916_A1, where IPO3916 is PlateA, IPO3917 is PlateB
fastq_read_counts_PlatesAB <- read_table(file.path( "../../../../2016/bulk_samples/PlatesAB_EI_20160512/fastq_read_counts_PlatesAB.txt"))
fastq_read_counts_PlatesAB <- fastq_read_counts_PlatesAB %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_") %>% # remove "Sample_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# A2B2 resequenced (most of) the same samples as AB, but fortunately, Earlham Institute coded the AB samples as IPO3916/7_A1 and the A2B2 samples as PlateA/B_A1. So I can use this column to join with the other metadata
pathtofastqseqdata = "../../"
# PlatesA2B2
# sample identifier in soupdata has form PlateA_A1
fastq_read_counts_PlatesA2B2 <- read_table(file.path(pathtofastqseqdata, "2017/bulk_samples/PlatesA2B2/fastq_read_counts_PlatesA2B2.txt"))
# A2B2 resequenced (most of) the same samples as AB, but fortunately, Earlham Institute coded the AB samples as IPO3916/7_A1 and the A2B2 samples as PlateA/B_A1. So I can use this column to join with the other metadata
pathtofastqseqdata = "../.."
# PlatesA2B2
# sample identifier in soupdata has form PlateA_A1
fastq_read_counts_PlatesA2B2 <- read_table(file.path(pathtofastqseqdata, "2017/bulk_samples/PlatesA2B2/fastq_read_counts_PlatesA2B2.txt"))
# PlatesA2B2
# sample identifier in soupdata has form PlateA_A1
fastq_read_counts_PlatesA2B2 <- read_table(file.path(pathtofastqseqdata, "PlatesA2B2/fastq_read_counts_PlatesA2B2.txt"))
fastq_read_counts_PlatesA2B2 <- fastq_read_counts_PlatesA2B2 %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1322_") %>% # remove "Sample_PRO1322_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesEF
fastq_read_counts_PlatesEF <- read_table(file.path(pathtofastqseqdata, "PlatesEF/fastq_read_counts_PlatesEF.txt"))
fastq_read_counts_PlatesEF <- fastq_read_counts_PlatesEF %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "_[ACGT]{9}-[ACGT]{6}") %>% # remove index sequence from end of string, e.g. _TAGGTTAGG-GCCAAT
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesGH
fastq_read_counts_PlatesGH <- read_table(file.path(pathtofastqseqdata, "PlatesGH/fastq_read_counts_PlatesGH.txt"))
fastq_read_counts_PlatesGH <- fastq_read_counts_PlatesGH %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1747_") %>% # remove index sequence from end of string, Sample_PRO1747_
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
fastq_read_counts_PlatesABA2B2EFGH <- bind_rows(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
# sanity check: should have: "IPO3916" "IPO3917" "PlateA"  "PlateB"  "PlateE"  "PlateF"  "PlateG"  "PlateH"
fastq_read_counts_PlatesABA2B2EFGH %>%
dplyr::select(sample) %>%
tidyr::separate(sample, sep = "_", into = c("sampleprefix", "samplesuffix")) %>%
dplyr::count(sampleprefix) %>%
dplyr::arrange(sampleprefix)
rm(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
# A2B2 resequenced (most of) the same samples as AB, but fortunately, Earlham Institute coded the AB samples as IPO3916/7_A1 and the A2B2 samples as PlateA/B_A1. So I can use this column to join with the other metadata
pathtofastqseqdata = "../.."
# PlatesAB
# sample identifier in soupdata has form IPO3916_A1, where IPO3916 is PlateA, IPO3917 is PlateB
fastq_read_counts_PlatesAB <- read_table(file.path( "../../../../2016/bulk_samples/PlatesAB_EI_20160512/fastq_read_counts_PlatesAB.txt"))
fastq_read_counts_PlatesAB <- fastq_read_counts_PlatesAB %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_") %>% # remove "Sample_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesA2B2
# sample identifier in soupdata has form PlateA_A1
fastq_read_counts_PlatesA2B2 <- read_table(file.path(pathtofastqseqdata, "PlatesA2B2/fastq_read_counts_PlatesA2B2.txt"))
fastq_read_counts_PlatesA2B2 <- fastq_read_counts_PlatesA2B2 %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1322_") %>% # remove "Sample_PRO1322_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesEF
fastq_read_counts_PlatesEF <- read_table(file.path(pathtofastqseqdata, "PlatesEF/fastq_read_counts_PlatesEF.txt"))
fastq_read_counts_PlatesEF <- fastq_read_counts_PlatesEF %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "_[ACGT]{9}-[ACGT]{6}") %>% # remove index sequence from end of string, e.g. _TAGGTTAGG-GCCAAT
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesGH
fastq_read_counts_PlatesGH <- read_table(file.path(pathtofastqseqdata, "PlatesGH/fastq_read_counts_PlatesGH.txt"))
fastq_read_counts_PlatesGH <- fastq_read_counts_PlatesGH %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1747_") %>% # remove index sequence from end of string, Sample_PRO1747_
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
fastq_read_counts_PlatesABA2B2EFGH <- bind_rows(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
# sanity check: should have: "IPO3916" "IPO3917" "PlateA"  "PlateB"  "PlateE"  "PlateF"  "PlateG"  "PlateH"
fastq_read_counts_PlatesABA2B2EFGH %>%
dplyr::select(sample) %>%
tidyr::separate(sample, sep = "_", into = c("sampleprefix", "samplesuffix")) %>%
dplyr::count(sampleprefix) %>%
dplyr::arrange(sampleprefix)
rm(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
View(fastq_read_counts_PlatesABA2B2EFGH)
pathtoidxmetagenomecovdata = "../../PlatesABA2B2EFGH/"
barcodesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_406barcodes_20190116"
mitogenomesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_308mitogenomes_20190115"
idx_meta_genomecov_ABA2B2EFGH_barcodes <- read_delim(file.path(barcodesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190116_406barcodes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_ABA2B2EFGH_mitogenomes <- read_delim(file.path(mitogenomesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190115_308mitogenomes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
View(idx_meta_genomecov_ABA2B2EFGH_barcodes)
View(idx_meta_genomecov_ABA2B2EFGH_barcodes)
# make species table from the Barcode names
barcodes <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::select(COI = mitogenome, COI_Species, COI_length = mt_length) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) %>% # remove column indicating COI_spike species
distinct(COI, .keep_all = TRUE) %>% # keep only distinct values of mitogenome, should return 406
mutate(BOLD = COI) %>% # make new BOLD column with mitogenome
mutate(BOLD = str_extract(BOLD, "[A-Z]{3}[0-9]{4}$")) %>% # extract only the BOLD number
mutate(BOLD = str_c("BOLD:", BOLD)) # add "BOLD:" as prefix. Have to do it this way because some of the BOLD numbers are not prefixed by "BOLD:"
View(barcodes)
# extract individual taxonomic ranks and re-merge Species and BOLD_ID. Species and BOLD_ID are messy because the epithets can include multiple elements
# cf_extrema_ACI8982, sp_AAF9271, tridactylus_ACH0172, cf_extrema_ACI8982, AAN6605_NA
# the AAN6605_NA is when there was no species epithet in the original name, not even "sp"
barcodes <- barcodes %>%
tidyr::separate(COI, c("Order", "Family", "Genus", "Species", "BOLD_ID"), sep = "_", remove = FALSE, extra = "merge") %>%
tidyr::unite("Species_BOLD", c("Species", "BOLD_ID"))
View(barcodes)
# taxonomyfilepath <- "~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfilepath <- "../6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfile <- "Species_for_mitogenome_sequencing_20181112.xlsx"
mitotaxonomies <- read_excel(file.path(taxonomyfilepath, taxonomyfile), sheet = "mitogenome_database", na = "NA") %>%
dplyr::filter(COI_CytB_sanger_sequenced == "no" &  mitogenome_status != "failed") # 308
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(Yinqiu_mitogenome_fastaname, Order, Family, Genus, Species_BOLD)
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = " ", into = c("Genus2", "Species_BOLD")) %>%
dplyr::select(-Genus2)
mitotaxonomies$Species_BOLD <- str_replace(mitotaxonomies$Species_BOLD, "_BOLD", "__BOLD") # delimit species epithet and BOLD:number
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = "__", into = c("Species", "BOLD"))
# sanity check
mitotaxonomies %>% distinct(BOLD) %>% count() # 308 unique BOLD numbers
mitotaxonomies <-  left_join(idx_meta_genomecov_ABA2B2EFGH_mitogenomes, mitotaxonomies, by = c("mitogenome" = "Yinqiu_mitogenome_fastaname")) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) # remove column indicating COI_spike species
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(BOLD, Order, Family, Genus, mitogenome, mt_length) %>%
distinct(BOLD, .keep_all = TRUE) # merge and reduce to 308 unique mitogenomes
View(mitotaxonomies)
names(barcodes)
names(mitotaxonomies)
species <- left_join(barcodes, mitotaxonomies, by = c("BOLD", "Order", "Family", "Genus")) %>%
dplyr::select(BOLD, Order, Family, Genus, Species_BOLD, mitogenome, COI, mt_length, COI_length)
View(species)
rm(barcodes, mitotaxonomies)
View(fastq_read_counts_PlatesABA2B2EFGH)
View(idx_meta_genomecov_ABA2B2EFGH_barcodes)
View(idx_meta_genomecov_ABA2B2EFGH_mitogenomes)
idx_meta_genomecov_ABA2B2EFGH_barcodes_test <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
left_join(idx_meta_genomecov_ABA2B2EFGH_barcodes, fastq_read_counts_PlatesABA2B2EFGH, by = c("sample"))
View(fastq_read_counts_PlatesABA2B2EFGH)
View(fastq_read_counts_PlatesABA2B2EFGH)
library(tidyverse)
library(readxl) # read excel spreadsheets
library(hablar) # data type conversion
library(arsenal) # utilities
# A2B2 resequenced (most of) the same samples as AB, but fortunately, Earlham Institute coded the AB samples as IPO3916/7_A1 and the A2B2 samples as PlateA/B_A1. So I can use this column to join with the other metadata
pathtofastqseqdata = "../.."
# PlatesAB
# sample identifier in soupdata has form IPO3916_A1, where IPO3916 is PlateA, IPO3917 is PlateB
fastq_read_counts_PlatesAB <- read_table(file.path( "../../../../2016/bulk_samples/PlatesAB_EI_20160512/fastq_read_counts_PlatesAB.txt"))
fastq_read_counts_PlatesAB <- fastq_read_counts_PlatesAB %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_") %>% # remove "Sample_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesA2B2
# sample identifier in soupdata has form PlateA_A1
fastq_read_counts_PlatesA2B2 <- read_table(file.path(pathtofastqseqdata, "PlatesA2B2/fastq_read_counts_PlatesA2B2.txt"))
fastq_read_counts_PlatesA2B2 <- fastq_read_counts_PlatesA2B2 %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1322_") %>% # remove "Sample_PRO1322_" from beginning of string
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesEF
fastq_read_counts_PlatesEF <- read_table(file.path(pathtofastqseqdata, "PlatesEF/fastq_read_counts_PlatesEF.txt"))
fastq_read_counts_PlatesEF <- fastq_read_counts_PlatesEF %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "_[ACGT]{9}-[ACGT]{6}") %>% # remove index sequence from end of string, e.g. _TAGGTTAGG-GCCAAT
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
# PlatesGH
fastq_read_counts_PlatesGH <- read_table(file.path(pathtofastqseqdata, "PlatesGH/fastq_read_counts_PlatesGH.txt"))
fastq_read_counts_PlatesGH <- fastq_read_counts_PlatesGH %>%
tidyr::separate(file, into = c(NA, "gpfs", "home", "b042", "greenland", "plates", "platessub", "BWA", "sample", "fastqfile"), sep = "/", remove = TRUE) %>%
mutate_at("sample", str_remove, "Sample_PRO1747_") %>% # remove index sequence from end of string, Sample_PRO1747_
dplyr::select(sample, tot_num_seqs = num_seqs) %>%
dplyr::group_by(sample) %>%
summarise(tot_num_seqs = sum(tot_num_seqs))
fastq_read_counts_PlatesABA2B2EFGH <- bind_rows(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
# sanity check: should have: "IPO3916" "IPO3917" "PlateA"  "PlateB"  "PlateE"  "PlateF"  "PlateG"  "PlateH"
fastq_read_counts_PlatesABA2B2EFGH %>%
dplyr::select(sample) %>%
tidyr::separate(sample, sep = "_", into = c("sampleprefix", "samplesuffix")) %>%
dplyr::count(sampleprefix) %>%
dplyr::arrange(sampleprefix)
rm(fastq_read_counts_PlatesAB, fastq_read_counts_PlatesA2B2, fastq_read_counts_PlatesEF, fastq_read_counts_PlatesGH)
barcodesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_406barcodes_20190116"
mitogenomesoutputidxstatstabulatefolder <- "../../PlatesABA2B2EFGH/minimap2_308mitogenomes_20190115"
idx_meta_genomecov_ABA2B2EFGH_barcodes <- read_delim(file.path(barcodesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190116_406barcodes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
idx_meta_genomecov_ABA2B2EFGH_barcodes_test <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
left_join(idx_meta_genomecov_ABA2B2EFGH_barcodes, fastq_read_counts_PlatesABA2B2EFGH, by = c("sample"))
idx_meta_genomecov_ABA2B2EFGH_mitogenomes <- read_delim(file.path(mitogenomesoutputidxstatstabulatefolder, "idx_meta_genomecov_ABA2B2EFGH_minimap2_20190115_308mitogenomes.txt"), delim = "\t", escape_double = FALSE, trim_ws = TRUE)
# idx_meta_genomecov_ABA2B2EFGH_barcodes <- idx_meta_genomecov_ABA2B2EFGH
#
# rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
# make species table from the Barcode names
barcodes <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::select(COI = mitogenome, COI_Species, COI_length = mt_length) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) %>% # remove column indicating COI_spike species
distinct(COI, .keep_all = TRUE) %>% # keep only distinct values of mitogenome, should return 406
mutate(BOLD = COI) %>% # make new BOLD column with mitogenome
mutate(BOLD = str_extract(BOLD, "[A-Z]{3}[0-9]{4}$")) %>% # extract only the BOLD number
mutate(BOLD = str_c("BOLD:", BOLD)) # add "BOLD:" as prefix. Have to do it this way because some of the BOLD numbers are not prefixed by "BOLD:"
# extract individual taxonomic ranks and re-merge Species and BOLD_ID. Species and BOLD_ID are messy because the epithets can include multiple elements
# cf_extrema_ACI8982, sp_AAF9271, tridactylus_ACH0172, cf_extrema_ACI8982, AAN6605_NA
# the AAN6605_NA is when there was no species epithet in the original name, not even "sp"
barcodes <- barcodes %>%
tidyr::separate(COI, c("Order", "Family", "Genus", "Species", "BOLD_ID"), sep = "_", remove = FALSE, extra = "merge") %>%
tidyr::unite("Species_BOLD", c("Species", "BOLD_ID"))
# the info line of the COI_Barcode fasta file is already well formatted:
# Diptera_Anthomyiidae_Zaphne_divisa_BOLD:AAG2441
# Even this one can be parsed by first keeping together (extra = "merge") everything after the fourth column (tundrica_BOLD:AAG1723). then merge the Species and BOLD_ID  columns (frontata_tundrica_BOLD:AAG1723)
# Diptera_Anthomyiidae_Zaphne_frontata_tundrica_BOLD:AAG1723
# idx_meta_genomecov_ABA2B2EFGH_mitogenomes <- idx_meta_genomecov_ABA2B2EFGH
#
# rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
# taxonomyfilepath <- "~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfilepath <- "../6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfile <- "Species_for_mitogenome_sequencing_20181112.xlsx"
mitotaxonomies <- read_excel(file.path(taxonomyfilepath, taxonomyfile), sheet = "mitogenome_database", na = "NA") %>%
dplyr::filter(COI_CytB_sanger_sequenced == "no" &  mitogenome_status != "failed") # 308
# mitogenome_status == "failed" indicates specimens that failed sequencing at Copenhagen and were then sent to EI. These species are given two rows. I only want the EI row
# COI_CytB_sanger_sequenced == "no" indicates specimens for which we did not do COI and cytB Sanger sequencing instead of mitogenome assembly (n = 41)
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(Yinqiu_mitogenome_fastaname, Order, Family, Genus, Species_BOLD)
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = " ", into = c("Genus2", "Species_BOLD")) %>%
dplyr::select(-Genus2)
# ifelse(mitotaxonomies$Genus == mitotaxonomies$Genus2, 1, 0) # Genus and Genus2 are the same, so i can delete Genus2
mitotaxonomies$Species_BOLD <- str_replace(mitotaxonomies$Species_BOLD, "_BOLD", "__BOLD") # delimit species epithet and BOLD:number
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = "__", into = c("Species", "BOLD"))
# separate species epithet and BOLD:number
# sanity check
mitotaxonomies %>% distinct(BOLD) %>% count() # 308 unique BOLD numbers
mitotaxonomies <-  left_join(idx_meta_genomecov_ABA2B2EFGH_mitogenomes, mitotaxonomies, by = c("mitogenome" = "Yinqiu_mitogenome_fastaname")) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) # remove column indicating COI_spike species
# names(mitotaxonomies)
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(BOLD, Order, Family, Genus, mitogenome, mt_length) %>%
distinct(BOLD, .keep_all = TRUE) # merge and reduce to 308 unique mitogenomes
names(barcodes)
names(mitotaxonomies)
species <- left_join(barcodes, mitotaxonomies, by = c("BOLD", "Order", "Family", "Genus")) %>%
dplyr::select(BOLD, Order, Family, Genus, Species_BOLD, mitogenome, COI, mt_length, COI_length)
rm(barcodes, mitotaxonomies)
View(species)
species$sp <- species %>%
tidyr::unite("sp", seq(nrow(species)))
species$sp <- seq(nrow(species))
View(species)
species$sp <- tidyr::unite("sp", sp)
species$sp <- tidyr::unite("sp", species$sp)
species$spnum <- seq(nrow(species))
species$sp <- tidyr::unite("sp", species$spnum)
species$sp <- species %>% tidyr::unite("sp", c("sp", spnum))
View(species)
# idx_meta_genomecov_ABA2B2EFGH_barcodes <- idx_meta_genomecov_ABA2B2EFGH
#
# rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
# make species table from the Barcode names
barcodes <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::select(COI = mitogenome, COI_Species, COI_length = mt_length) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) %>% # remove column indicating COI_spike species
distinct(COI, .keep_all = TRUE) %>% # keep only distinct values of mitogenome, should return 406
mutate(BOLD = COI) %>% # make new BOLD column with mitogenome
mutate(BOLD = str_extract(BOLD, "[A-Z]{3}[0-9]{4}$")) %>% # extract only the BOLD number
mutate(BOLD = str_c("BOLD:", BOLD)) # add "BOLD:" as prefix. Have to do it this way because some of the BOLD numbers are not prefixed by "BOLD:"
# extract individual taxonomic ranks and re-merge Species and BOLD_ID. Species and BOLD_ID are messy because the epithets can include multiple elements
# cf_extrema_ACI8982, sp_AAF9271, tridactylus_ACH0172, cf_extrema_ACI8982, AAN6605_NA
# the AAN6605_NA is when there was no species epithet in the original name, not even "sp"
barcodes <- barcodes %>%
tidyr::separate(COI, c("Order", "Family", "Genus", "Species", "BOLD_ID"), sep = "_", remove = FALSE, extra = "merge") %>%
tidyr::unite("Species_BOLD", c("Species", "BOLD_ID"))
# the info line of the COI_Barcode fasta file is already well formatted:
# Diptera_Anthomyiidae_Zaphne_divisa_BOLD:AAG2441
# Even this one can be parsed by first keeping together (extra = "merge") everything after the fourth column (tundrica_BOLD:AAG1723). then merge the Species and BOLD_ID  columns (frontata_tundrica_BOLD:AAG1723)
# Diptera_Anthomyiidae_Zaphne_frontata_tundrica_BOLD:AAG1723
# idx_meta_genomecov_ABA2B2EFGH_mitogenomes <- idx_meta_genomecov_ABA2B2EFGH
#
# rm(idx_meta_genomecov_A2B2, idx_meta_genomecov_AB, idx_meta_genomecov_EF, idx_meta_genomecov_GH, idx_meta_genomecov_ABA2B2EFGH)
# taxonomyfilepath <- "~/Dropbox/Working_docs/Roslin_Greenland/2017/bulk_samples/ArcDyn_scripts/6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfilepath <- "../6_referenceseqs_metadata/mitogenomes_barcodes"
taxonomyfile <- "Species_for_mitogenome_sequencing_20181112.xlsx"
mitotaxonomies <- read_excel(file.path(taxonomyfilepath, taxonomyfile), sheet = "mitogenome_database", na = "NA") %>%
dplyr::filter(COI_CytB_sanger_sequenced == "no" &  mitogenome_status != "failed") # 308
# mitogenome_status == "failed" indicates specimens that failed sequencing at Copenhagen and were then sent to EI. These species are given two rows. I only want the EI row
# COI_CytB_sanger_sequenced == "no" indicates specimens for which we did not do COI and cytB Sanger sequencing instead of mitogenome assembly (n = 41)
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(Yinqiu_mitogenome_fastaname, Order, Family, Genus, Species_BOLD)
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = " ", into = c("Genus2", "Species_BOLD")) %>%
dplyr::select(-Genus2)
# ifelse(mitotaxonomies$Genus == mitotaxonomies$Genus2, 1, 0) # Genus and Genus2 are the same, so i can delete Genus2
mitotaxonomies$Species_BOLD <- str_replace(mitotaxonomies$Species_BOLD, "_BOLD", "__BOLD") # delimit species epithet and BOLD:number
mitotaxonomies <- mitotaxonomies %>%
tidyr::separate(Species_BOLD, sep = "__", into = c("Species", "BOLD"))
# separate species epithet and BOLD:number
# sanity check
mitotaxonomies %>% distinct(BOLD) %>% count() # 308 unique BOLD numbers
mitotaxonomies <-  left_join(idx_meta_genomecov_ABA2B2EFGH_mitogenomes, mitotaxonomies, by = c("mitogenome" = "Yinqiu_mitogenome_fastaname")) %>%
dplyr::filter(COI_Species != "COI_Spike") %>% # remove COI_spike species
dplyr::select(-COI_Species) # remove column indicating COI_spike species
# names(mitotaxonomies)
mitotaxonomies <- mitotaxonomies %>%
dplyr::select(BOLD, Order, Family, Genus, mitogenome, mt_length) %>%
distinct(BOLD, .keep_all = TRUE) # merge and reduce to 308 unique mitogenomes
names(barcodes)
names(mitotaxonomies)
species <- left_join(barcodes, mitotaxonomies, by = c("BOLD", "Order", "Family", "Genus")) %>%
dplyr::select(BOLD, Order, Family, Genus, Species_BOLD, mitogenome, COI, mt_length, COI_length)
species$sp <- seq(nrow(species))
species$sp <- species %>% str_c("sp", sp)
species$sp <- str_c("sp", species$sp)
View(species)
species_test <- species %>%
dplyr::select(sp, everything())
View(species_test)
species <- species %>% dplyr::select(sp, everything())
rm(species_test)
View(species)
species_test <- species %>%
mutate(omit_from_env = case_when(
Order %in% c("Sarcoptiformes", "Trombidiformes", "Entomobryomorpha", "Neelipleona", "Poduromorpha", "Symphypleona") ~ "Omit",
TRUE ~ "Keep"
)
)
View(species_test)
species <- species %>% dplyr::select(omit_from_env, sp, everything())
species_test <- species_test %>% dplyr::select(omit_from_env, sp, everything())
species <- species %>%
mutate(omit_from_env = case_when(
Order %in% c("Sarcoptiformes", "Trombidiformes", "Entomobryomorpha", "Neelipleona", "Poduromorpha", "Symphypleona") ~ "Omit",
TRUE ~ "Keep"
)
)
species <- species %>%
dplyr::select(omit_from_env, sp, everything())
rm(barcodes, mitotaxonomies)
rm(species_test)
# code to remove
species_test <- species %>%
dplyr::filter(omit_from_env == "Keep")
View(species_test)
# code to remove
species_test <- species %>%
dplyr::filter(omit_from_env == "Keep") %>%
dplyr::select(-omit_from_env)
View(species_test)
rm(species_test)
View(idx_meta_genomecov_ABA2B2EFGH_barcodes)
spikes <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::select(mitogenome, COI_Species)
View(species)
View(spikes)
spikes <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::select(mitogenome, COI_Species) %>%
dplyr::filter(COI_Species == "COI_Spike") %>%
dplyr::select(mitogenome) %>%
distinct()
View(spikes)
spikes$species <- seq(nrow(spikes))
View(spikes)
View(spikes)
spikes$species <- str_c("spike", species$sp)
spikes$species <- str_c("spike", species$species)
spikes$species <- seq(nrow(spikes))
spikes$species <- str_c("spike", species$species)
spikes$species <- str_c("spike", spikes$species)
View(spikes)
spikes$species <- seq(nrow(spikes))
View(spikes)
spikes$species <- str_c("spike", spikes$species)
spikes <- spikes %>% dplyr::select(species, full.name = mitogenome)
View(spikes)
idx_meta_genomecov_ABA2B2EFGH_barcodes_test <- idx_meta_genomecov_ABA2B2EFGH_barcodes %>%
dplyr::rename(run = EI_RUN)
View(idx_meta_genomecov_ABA2B2EFGH_barcodes)
View(idx_meta_genomecov_ABA2B2EFGH_mitogenomes)
